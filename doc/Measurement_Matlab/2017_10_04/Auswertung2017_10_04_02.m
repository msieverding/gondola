%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: C:\Users\Marvin\Desktop\Projektarbeit\gondola\doc\Measurement_Matlab\2017_10_04\2017_10_04.xls
%    Worksheet: 02
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2017/10/04 12:01:32

clearvars;
close all;
%% Import the data
[~, ~, raw] = xlsread('C:\Users\Marvin\Desktop\Projektarbeit\gondola\doc\Measurement_Matlab\2017_10_04\2017_10_04.xls','02');
raw = raw(3:11,1:6);

[~, ~, raw2] = xlsread('C:\Users\Marvin\Desktop\Projektarbeit\gondola\doc\Measurement_Matlab\2017_10_04\2017_10_04.xls','02');
raw2 = raw2(20:28,1:6);

%% Replace non-numeric cells with 0.0
R = cellfun(@(x) (~isnumeric(x) && ~islogical(x)) || isnan(x),raw); % Find non-numeric cells
raw(R) = {0.0}; % Replace non-numeric cells

R2 = cellfun(@(x) (~isnumeric(x) && ~islogical(x)) || isnan(x),raw2); % Find non-numeric cells
raw2(R2) = {0.0}; % Replace non-numeric cells

%% Create output variable
data = reshape([raw{:}],size(raw));

data2 = reshape([raw2{:}],size(raw2));

%% Allocate imported array to column variable names
Measurement = [data(:,1) data2(:,1)];
Weight = [data(:,2) data2(:,2)];           % gramm
g = 9.81;                                   % acceleration
Force = Weight * g / 100;                   % resulting force
MeasX = [data(:,3) data2(:,3)];            % Measurement
X = [data(:,4) data2(:,4)];                % X-Position
Extension = [data(:,5) data2(:,5)];         % Extnsion due to force
TotalRopeLength = [data(:,6) data2(:,6)];  % total length of rope, that could extend

%% Clear temporary variables
clearvars data data2 raw raw2 R R2;

%% Plot Error against weight
figure;
hold on;
plot(Measurement(:,1), Extension(:,1));
plot(Measurement(:,2), Extension(:,2));
% TODO replace plot(Weight, Extension);
title("Error relating to tension of the rope with different initial rope length");
xlabel("Force [N]");
ylabel("Extension [mm]");
legend("TotalRopeLength = 1872", "TotalRopeLength = 5454", 'Location' ,'best');

%% Angle versus weight in 2D (alpha equals beta = middle of plane)
F_load = 100;       % let's say 100 per cent
alpha = [10, 20, 30, 40, 50, 60, 70, 80];
F_rope = F_load ./ (sind(alpha) * 2);
figure;
hold on;
plot(alpha, F_rope);
line([min(alpha) max(alpha)], [100 100], 'Color', 'k');
xlabel("angle [°]");
ylabel("Load factor [%]");
legend("Percent of original load", "100 per cent line", 'Location' ,'best');
